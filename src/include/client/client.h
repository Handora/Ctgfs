/*
 * author: OneDay_(ltang970618@gmail.com)
 **/
#pragma once
#include <brpc/channel.h>
#include <butil/time.h>
#include <fs.pb.h>
#include <gflags/gflags.h>
#include <master.pb.h>
#include <util/status.h>
#include <condition_variable>
#include <memory>
#include <mutex>
#include <queue>
#include <string>
#include <thread>
#include <vector>

namespace ctgfs {
namespace client {

// default server addr
const std::string DEFAULT_SERVER_ADDR = "127.0.0.1:1234";
// TODO:add cache of kv's addr
// help to find file position of KV
// before every extend query
class Client {
 public:
  typedef unsigned long long inum;
  // Client();  // use default addr
  Client(const std::string& ip, const int& port);
  // addr(ip:port)
  // Example:
  // 127.0.0.1:1234
  Client(const std::string& addr = DEFAULT_SERVER_ADDR);
  // should join all thread
  ~Client();
  // use inum to find the KV
  std::string GetKVAddrByInum(inum ino);
  // send the path and get the inum generated by master
  std::pair<inum, std::string> GetInumByName(const std::string& name,
                                             bool is_dir);

 private:
  // store master addr
  // ip:port
  std::string master_addr_;
  // brpc options
  brpc::ChannelOptions options;
};
}  // namespace client
}  // namespace ctgfs
